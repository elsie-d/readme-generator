inquire = require('inquirer');
fs = require('fs');

console.log('test')


 inquire
    .prompt(
        [{
            type: 'input',
            message: 'What is the tilte of your project?',
            name: 'title',
            validate: (title) => {
                if (title) {
                    return true
                }
                else {
                    return 'Value entry required'
                }
            }
        },
        {
            type: 'input',
            message: 'Please share a brief description of your project',
            name: 'description',
            validate: (description) => {
                if (description) {
                    return true
                }
                else {
                    return 'Value entry required'
                }
            }
        },
        {
            type: 'input',
            message: 'Any installation requirements? (Type N/A if none required)',
            name: 'installation',
            validate: (installation) => {
                if (installation) {
                    return true
                }
                else {
                    return 'Value entry required'
                }
            }
        },
        {
            type: 'input',
            message: 'What do we need to know for usage?',
            name: 'usage',
            validate: (usage) => {
                if (usage) {
                    return true
                }
                else {
                    return 'Value entry required'
                }
            }
        },
        {
            type: 'input',
            message: 'How can others contribute?',
            name: 'contributions',
            validate: (contributions) => {
                if (contributions) {
                    return true
                }
                else {
                    return 'Value entry required'
                }
            }
        },
        {
            type: 'input',
            message: 'How can we test the project?',
            name: 'tests',
            validate: (test) => {
                if (test) {
                    return true
                }
                else {
                    return 'Value entry required'
                }
            }
        },
        {
            type: 'list',
            message: 'Chose a license for your application:',
            choices: ['MIT', 'ISC', 'GNU General Public License v3.0', 'Apache 2.0 License'],
            name: 'license'
            
        },
        {
            type: 'input',
            message: 'What is your GitHub username?',
            name: 'gitUser',
            validate: (gitUser) => {
                if (gitUser) {
                    return true
                }
                else {
                    return 'Value entry required'
                }
            }
        },
        {
            type: 'input',
            message: 'What is you email address?',
            name: 'email',
            validate: (email) => {
                if (email) {
                    return true
                }
                else {
                    return 'Value entry required'
                }
            }
        },
        
        
    ])
    .then(answers => {

        let badge = []


        switch (answers.license) {
        case 'MIT':
        badge.push('[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n');
        break;
        case 'ISC':
        badge.push('[![License: ISC](https://img.shields.io/badge/License-ISC-blue.svg)](https://opensource.org/licenses/ISC)\n\n');
        break;
        case 'GNU General Public License v3.0':
        badge.push('[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n\n');
        break;
        case 'Apache 2.0 License':
        badge.ush('[![License](https://img.shields.io/badge/License-Apache_2.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n');
        break;      
        default:
        break;
                }            
        






        const fileName = `${answers.title.toLowerCase().split(' ').join('')}.md`;
        const fileInput =

            
        



        `
# ${answers.title}
${badge}
## Description
${answers.description}
        
## Table of Contents
        
- [Installation](#installation)
- [Usage](#usage)
- [Contributing](#contributions)
- [Tests](#tests)
- [License](#license)
- [Questions](#questions)
        
## Installation
${answers.installation}
        
        
## Usage
${answers.usage}
        
## Contributions
${answers.contributions}
        
## Tests
${answers.tests}
        
        
## License
${answers.license}
        
        
## Questions?
Find me on GitHub: <a href="https://github.com/${answers.gitUser}" target="_blank">${answers.gitUser}</a>
        
OR
        
Email me at: <a href="mailto:${answers.email}" target="_blank">${answers.email}</a>  
 `        

        fs.writeFile(fileName, fileInput, (err)=>
        err ? console.log(err): console.log(`README file ready as: ${fileName}`)
        )
    }

    ) 